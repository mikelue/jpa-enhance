package guru.mikelue.jpa.data;

/**
 * This interface provide a contract between the database constant(logical) and
 * Java Enumeration.
 *
 * <p>The problem in Java Enumeration is that integral value of enum
 * is generated by compiler. If any coding sequence changed, the integral value of enum changed.  * The correction would be no difference in Java runtime. But once the integral value have
 * persited in database, the value loaded would become differential meaning in program.</p>
 *
 * @param <T> The database constant type(Numeric)
 *
 * <pre>
 * public enum SomeStatus implements DbValueGetter{@code <Byte>} {
 *     Wait((byte)1), Working((byte)2), Stop((byte)3);
 *
 *     private byte dbValue;
 *     SomeStatus(byte newDbValue)
 *     {
 *         dbValue = newDbValue
 *     }
 *
 *    {@code @Override}
 *     public Byte getDbValue()
 *     {
 *         return dbValue;
 *     }
 * }
 * </pre>
 */
public interface DbValueGetter<T extends Number> {
	/**
	 * Retriving the value which would be persisted in database.
	 *
	 * @return The integral value persisted in database.
	 */
	public T getDbValue();
}
